### Add a new book to the catalog
POST http://localhost:8080/books
Content-Type: application/json

{
  "title": "The Lord of the Rings",
  "author": "J.R.R. Tolkien",
  "isbn": "9780261102385",
  "publicationYear": 1954
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### User borrows book 1
POST localhost:8080/users/1/borrow/1

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### User borrows book 2
POST localhost:8080/users/1/borrow/2

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### User borrows book 3
POST localhost:8080/users/1/borrow/3

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### User returns book
POST localhost:8080/users/1/return/2

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Get list of borrowed books
GET localhost:8080/users/1/borrowed-books

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.test("Correct first name", function () {
        client.assert(response.body.user.firstName === "Alice", "User first name is not Alice");
    });
    client.test("Correct number of borrowed books", function () {
        client.assert(response.body.borrowedBooks.length === 2, "Must be 2 borrowed books");
    });
%}


